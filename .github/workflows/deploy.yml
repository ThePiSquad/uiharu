name: Deploy

on:
  push:
    branches:
      - master
    tags:
      - "*.*.*"

jobs:
  prepare-source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create application config file
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.CONFIG_FILE_BASE64 }}
          filename: "application.conf"
          is-executable: false
          working-directory: "src/main/resources"
      - name: Create Github secret key file
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.UIHARU_PRIVATE_KEY }}
          filename: "uiharu-private-key.pem"
          is-executable: false
          working-directory: "src/main/resources"


  build-docker:
    runs-on: ubuntu-latest
    needs:
      - prepare-source
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: aliyun/acr-login@v1
        with:
          login-server: 'registry.cn-hangzhou.aliyuncs.com'
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "registry.cn-hangzhou.aliyuncs.com/pisquad/uiharu:${{ env.RELEASE_VERSION }}"

  call-webhook:
    runs-on: ubuntu-latest
    needs:
      - build-docker
    steps:
      - name: Call Remote Webhook
        run: curl "${{ secrets.WEBHOOK_URL }}?version=${{ env.RELEASE_VERSION }}"